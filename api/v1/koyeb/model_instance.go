/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
	"time"
)

// Instance struct for Instance
type Instance struct {
	Id *string `json:"id,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	AppId *string `json:"app_id,omitempty"`
	ServiceId *string `json:"service_id,omitempty"`
	RegionalDeploymentId *string `json:"regional_deployment_id,omitempty"`
	AllocationId *string `json:"allocation_id,omitempty"`
	Type *string `json:"type,omitempty"`
	ReplicaIndex *int64 `json:"replica_index,omitempty"`
	Region *string `json:"region,omitempty"`
	Datacenter *string `json:"datacenter,omitempty"`
	Hypervisor *string `json:"hypervisor,omitempty"`
	Status *InstanceStatus `json:"status,omitempty"`
	Messages []string `json:"messages,omitempty"`
	StartedAt *time.Time `json:"started_at,omitempty"`
	SucceededAt *time.Time `json:"succeeded_at,omitempty"`
	TerminatedAt *time.Time `json:"terminated_at,omitempty"`
	// WARNING: Please don't use the following attribute. Koyeb doesn't guarantee backwards compatible breaking change and reserve the right to completely drop it without notice. USE AT YOUR OWN RISK.
	XyzDeploymentId *string `json:"xyz_deployment_id,omitempty"`
}

// NewInstance instantiates a new Instance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstance() *Instance {
	this := Instance{}
	var status InstanceStatus = INSTANCESTATUS_ALLOCATING
	this.Status = &status
	return &this
}

// NewInstanceWithDefaults instantiates a new Instance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceWithDefaults() *Instance {
	this := Instance{}
	var status InstanceStatus = INSTANCESTATUS_ALLOCATING
	this.Status = &status
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Instance) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Instance) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Instance) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Instance) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Instance) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Instance) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Instance) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Instance) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Instance) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *Instance) GetOrganizationId() string {
	if o == nil || isNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetOrganizationIdOk() (*string, bool) {
	if o == nil || isNil(o.OrganizationId) {
    return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *Instance) HasOrganizationId() bool {
	if o != nil && !isNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *Instance) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *Instance) GetAppId() string {
	if o == nil || isNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetAppIdOk() (*string, bool) {
	if o == nil || isNil(o.AppId) {
    return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *Instance) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *Instance) SetAppId(v string) {
	o.AppId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *Instance) GetServiceId() string {
	if o == nil || isNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetServiceIdOk() (*string, bool) {
	if o == nil || isNil(o.ServiceId) {
    return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *Instance) HasServiceId() bool {
	if o != nil && !isNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *Instance) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetRegionalDeploymentId returns the RegionalDeploymentId field value if set, zero value otherwise.
func (o *Instance) GetRegionalDeploymentId() string {
	if o == nil || isNil(o.RegionalDeploymentId) {
		var ret string
		return ret
	}
	return *o.RegionalDeploymentId
}

// GetRegionalDeploymentIdOk returns a tuple with the RegionalDeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetRegionalDeploymentIdOk() (*string, bool) {
	if o == nil || isNil(o.RegionalDeploymentId) {
    return nil, false
	}
	return o.RegionalDeploymentId, true
}

// HasRegionalDeploymentId returns a boolean if a field has been set.
func (o *Instance) HasRegionalDeploymentId() bool {
	if o != nil && !isNil(o.RegionalDeploymentId) {
		return true
	}

	return false
}

// SetRegionalDeploymentId gets a reference to the given string and assigns it to the RegionalDeploymentId field.
func (o *Instance) SetRegionalDeploymentId(v string) {
	o.RegionalDeploymentId = &v
}

// GetAllocationId returns the AllocationId field value if set, zero value otherwise.
func (o *Instance) GetAllocationId() string {
	if o == nil || isNil(o.AllocationId) {
		var ret string
		return ret
	}
	return *o.AllocationId
}

// GetAllocationIdOk returns a tuple with the AllocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetAllocationIdOk() (*string, bool) {
	if o == nil || isNil(o.AllocationId) {
    return nil, false
	}
	return o.AllocationId, true
}

// HasAllocationId returns a boolean if a field has been set.
func (o *Instance) HasAllocationId() bool {
	if o != nil && !isNil(o.AllocationId) {
		return true
	}

	return false
}

// SetAllocationId gets a reference to the given string and assigns it to the AllocationId field.
func (o *Instance) SetAllocationId(v string) {
	o.AllocationId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Instance) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Instance) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Instance) SetType(v string) {
	o.Type = &v
}

// GetReplicaIndex returns the ReplicaIndex field value if set, zero value otherwise.
func (o *Instance) GetReplicaIndex() int64 {
	if o == nil || isNil(o.ReplicaIndex) {
		var ret int64
		return ret
	}
	return *o.ReplicaIndex
}

// GetReplicaIndexOk returns a tuple with the ReplicaIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetReplicaIndexOk() (*int64, bool) {
	if o == nil || isNil(o.ReplicaIndex) {
    return nil, false
	}
	return o.ReplicaIndex, true
}

// HasReplicaIndex returns a boolean if a field has been set.
func (o *Instance) HasReplicaIndex() bool {
	if o != nil && !isNil(o.ReplicaIndex) {
		return true
	}

	return false
}

// SetReplicaIndex gets a reference to the given int64 and assigns it to the ReplicaIndex field.
func (o *Instance) SetReplicaIndex(v int64) {
	o.ReplicaIndex = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *Instance) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
    return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *Instance) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *Instance) SetRegion(v string) {
	o.Region = &v
}

// GetDatacenter returns the Datacenter field value if set, zero value otherwise.
func (o *Instance) GetDatacenter() string {
	if o == nil || isNil(o.Datacenter) {
		var ret string
		return ret
	}
	return *o.Datacenter
}

// GetDatacenterOk returns a tuple with the Datacenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetDatacenterOk() (*string, bool) {
	if o == nil || isNil(o.Datacenter) {
    return nil, false
	}
	return o.Datacenter, true
}

// HasDatacenter returns a boolean if a field has been set.
func (o *Instance) HasDatacenter() bool {
	if o != nil && !isNil(o.Datacenter) {
		return true
	}

	return false
}

// SetDatacenter gets a reference to the given string and assigns it to the Datacenter field.
func (o *Instance) SetDatacenter(v string) {
	o.Datacenter = &v
}

// GetHypervisor returns the Hypervisor field value if set, zero value otherwise.
func (o *Instance) GetHypervisor() string {
	if o == nil || isNil(o.Hypervisor) {
		var ret string
		return ret
	}
	return *o.Hypervisor
}

// GetHypervisorOk returns a tuple with the Hypervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetHypervisorOk() (*string, bool) {
	if o == nil || isNil(o.Hypervisor) {
    return nil, false
	}
	return o.Hypervisor, true
}

// HasHypervisor returns a boolean if a field has been set.
func (o *Instance) HasHypervisor() bool {
	if o != nil && !isNil(o.Hypervisor) {
		return true
	}

	return false
}

// SetHypervisor gets a reference to the given string and assigns it to the Hypervisor field.
func (o *Instance) SetHypervisor(v string) {
	o.Hypervisor = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Instance) GetStatus() InstanceStatus {
	if o == nil || isNil(o.Status) {
		var ret InstanceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetStatusOk() (*InstanceStatus, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Instance) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given InstanceStatus and assigns it to the Status field.
func (o *Instance) SetStatus(v InstanceStatus) {
	o.Status = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *Instance) GetMessages() []string {
	if o == nil || isNil(o.Messages) {
		var ret []string
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetMessagesOk() ([]string, bool) {
	if o == nil || isNil(o.Messages) {
    return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *Instance) HasMessages() bool {
	if o != nil && !isNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []string and assigns it to the Messages field.
func (o *Instance) SetMessages(v []string) {
	o.Messages = v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *Instance) GetStartedAt() time.Time {
	if o == nil || isNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.StartedAt) {
    return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *Instance) HasStartedAt() bool {
	if o != nil && !isNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *Instance) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetSucceededAt returns the SucceededAt field value if set, zero value otherwise.
func (o *Instance) GetSucceededAt() time.Time {
	if o == nil || isNil(o.SucceededAt) {
		var ret time.Time
		return ret
	}
	return *o.SucceededAt
}

// GetSucceededAtOk returns a tuple with the SucceededAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetSucceededAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.SucceededAt) {
    return nil, false
	}
	return o.SucceededAt, true
}

// HasSucceededAt returns a boolean if a field has been set.
func (o *Instance) HasSucceededAt() bool {
	if o != nil && !isNil(o.SucceededAt) {
		return true
	}

	return false
}

// SetSucceededAt gets a reference to the given time.Time and assigns it to the SucceededAt field.
func (o *Instance) SetSucceededAt(v time.Time) {
	o.SucceededAt = &v
}

// GetTerminatedAt returns the TerminatedAt field value if set, zero value otherwise.
func (o *Instance) GetTerminatedAt() time.Time {
	if o == nil || isNil(o.TerminatedAt) {
		var ret time.Time
		return ret
	}
	return *o.TerminatedAt
}

// GetTerminatedAtOk returns a tuple with the TerminatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetTerminatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.TerminatedAt) {
    return nil, false
	}
	return o.TerminatedAt, true
}

// HasTerminatedAt returns a boolean if a field has been set.
func (o *Instance) HasTerminatedAt() bool {
	if o != nil && !isNil(o.TerminatedAt) {
		return true
	}

	return false
}

// SetTerminatedAt gets a reference to the given time.Time and assigns it to the TerminatedAt field.
func (o *Instance) SetTerminatedAt(v time.Time) {
	o.TerminatedAt = &v
}

// GetXyzDeploymentId returns the XyzDeploymentId field value if set, zero value otherwise.
func (o *Instance) GetXyzDeploymentId() string {
	if o == nil || isNil(o.XyzDeploymentId) {
		var ret string
		return ret
	}
	return *o.XyzDeploymentId
}

// GetXyzDeploymentIdOk returns a tuple with the XyzDeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetXyzDeploymentIdOk() (*string, bool) {
	if o == nil || isNil(o.XyzDeploymentId) {
    return nil, false
	}
	return o.XyzDeploymentId, true
}

// HasXyzDeploymentId returns a boolean if a field has been set.
func (o *Instance) HasXyzDeploymentId() bool {
	if o != nil && !isNil(o.XyzDeploymentId) {
		return true
	}

	return false
}

// SetXyzDeploymentId gets a reference to the given string and assigns it to the XyzDeploymentId field.
func (o *Instance) SetXyzDeploymentId(v string) {
	o.XyzDeploymentId = &v
}

func (o Instance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !isNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !isNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !isNil(o.ServiceId) {
		toSerialize["service_id"] = o.ServiceId
	}
	if !isNil(o.RegionalDeploymentId) {
		toSerialize["regional_deployment_id"] = o.RegionalDeploymentId
	}
	if !isNil(o.AllocationId) {
		toSerialize["allocation_id"] = o.AllocationId
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.ReplicaIndex) {
		toSerialize["replica_index"] = o.ReplicaIndex
	}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !isNil(o.Datacenter) {
		toSerialize["datacenter"] = o.Datacenter
	}
	if !isNil(o.Hypervisor) {
		toSerialize["hypervisor"] = o.Hypervisor
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if !isNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !isNil(o.SucceededAt) {
		toSerialize["succeeded_at"] = o.SucceededAt
	}
	if !isNil(o.TerminatedAt) {
		toSerialize["terminated_at"] = o.TerminatedAt
	}
	if !isNil(o.XyzDeploymentId) {
		toSerialize["xyz_deployment_id"] = o.XyzDeploymentId
	}
	return json.Marshal(toSerialize)
}

type NullableInstance struct {
	value *Instance
	isSet bool
}

func (v NullableInstance) Get() *Instance {
	return v.value
}

func (v *NullableInstance) Set(val *Instance) {
	v.value = val
	v.isSet = true
}

func (v NullableInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstance(val *Instance) *NullableInstance {
	return &NullableInstance{value: val, isSet: true}
}

func (v NullableInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


