/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// RegionalDeploymentVolume struct for RegionalDeploymentVolume
type RegionalDeploymentVolume struct {
	Id *string `json:"id,omitempty"`
	Path *string `json:"path,omitempty"`
	ReplicaIndex *int64 `json:"replica_index,omitempty"`
}

// NewRegionalDeploymentVolume instantiates a new RegionalDeploymentVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionalDeploymentVolume() *RegionalDeploymentVolume {
	this := RegionalDeploymentVolume{}
	return &this
}

// NewRegionalDeploymentVolumeWithDefaults instantiates a new RegionalDeploymentVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionalDeploymentVolumeWithDefaults() *RegionalDeploymentVolume {
	this := RegionalDeploymentVolume{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RegionalDeploymentVolume) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionalDeploymentVolume) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RegionalDeploymentVolume) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RegionalDeploymentVolume) SetId(v string) {
	o.Id = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *RegionalDeploymentVolume) GetPath() string {
	if o == nil || isNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionalDeploymentVolume) GetPathOk() (*string, bool) {
	if o == nil || isNil(o.Path) {
    return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *RegionalDeploymentVolume) HasPath() bool {
	if o != nil && !isNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *RegionalDeploymentVolume) SetPath(v string) {
	o.Path = &v
}

// GetReplicaIndex returns the ReplicaIndex field value if set, zero value otherwise.
func (o *RegionalDeploymentVolume) GetReplicaIndex() int64 {
	if o == nil || isNil(o.ReplicaIndex) {
		var ret int64
		return ret
	}
	return *o.ReplicaIndex
}

// GetReplicaIndexOk returns a tuple with the ReplicaIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionalDeploymentVolume) GetReplicaIndexOk() (*int64, bool) {
	if o == nil || isNil(o.ReplicaIndex) {
    return nil, false
	}
	return o.ReplicaIndex, true
}

// HasReplicaIndex returns a boolean if a field has been set.
func (o *RegionalDeploymentVolume) HasReplicaIndex() bool {
	if o != nil && !isNil(o.ReplicaIndex) {
		return true
	}

	return false
}

// SetReplicaIndex gets a reference to the given int64 and assigns it to the ReplicaIndex field.
func (o *RegionalDeploymentVolume) SetReplicaIndex(v int64) {
	o.ReplicaIndex = &v
}

func (o RegionalDeploymentVolume) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !isNil(o.ReplicaIndex) {
		toSerialize["replica_index"] = o.ReplicaIndex
	}
	return json.Marshal(toSerialize)
}

type NullableRegionalDeploymentVolume struct {
	value *RegionalDeploymentVolume
	isSet bool
}

func (v NullableRegionalDeploymentVolume) Get() *RegionalDeploymentVolume {
	return v.value
}

func (v *NullableRegionalDeploymentVolume) Set(val *RegionalDeploymentVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionalDeploymentVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionalDeploymentVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionalDeploymentVolume(val *RegionalDeploymentVolume) *NullableRegionalDeploymentVolume {
	return &NullableRegionalDeploymentVolume{value: val, isSet: true}
}

func (v NullableRegionalDeploymentVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionalDeploymentVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


